# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Klass(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    firmid: typing___Text = ...
    name: typing___Text = ...
    code: typing___Text = ...
    npars: builtin___int = ...
    nsecs: builtin___int = ...

    def __init__(self,
        *,
        firmid : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        code : typing___Optional[typing___Text] = None,
        npars : typing___Optional[builtin___int] = None,
        nsecs : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"code",b"code",u"firmid",b"firmid",u"name",b"name",u"npars",b"npars",u"nsecs",b"nsecs"]) -> None: ...
type___Klass = Klass

class Firm(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    firmid: typing___Text = ...
    firm_name: typing___Text = ...
    null_status: builtin___bool = ...
    value_status: builtin___int = ...
    exchange: typing___Text = ...

    def __init__(self,
        *,
        firmid : typing___Optional[typing___Text] = None,
        firm_name : typing___Optional[typing___Text] = None,
        null_status : typing___Optional[builtin___bool] = None,
        value_status : typing___Optional[builtin___int] = None,
        exchange : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"null_status",b"null_status",u"status",b"status",u"value_status",b"value_status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"exchange",b"exchange",u"firm_name",b"firm_name",u"firmid",b"firmid",u"null_status",b"null_status",u"status",b"status",u"value_status",b"value_status"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"status",b"status"]) -> typing_extensions___Literal["null_status","value_status"]: ...
type___Firm = Firm

class AllTrade(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trade_num: builtin___int = ...
    null_flags: builtin___bool = ...
    value_flags: builtin___int = ...
    price: typing___Text = ...
    qty: builtin___int = ...
    value: typing___Text = ...
    accruedint: typing___Text = ...
    settlecode: typing___Text = ...
    reporate: typing___Text = ...
    repovalue: typing___Text = ...
    repo2value: typing___Text = ...
    repoterm: typing___Text = ...
    sec_code: typing___Text = ...
    class_code: typing___Text = ...
    period: builtin___int = ...
    open_interest: typing___Text = ...
    exchange_code: typing___Text = ...
    exec_market: typing___Text = ...

    @property
    def datetime(self) -> type___DateTimeEntry: ...

    def __init__(self,
        *,
        trade_num : typing___Optional[builtin___int] = None,
        null_flags : typing___Optional[builtin___bool] = None,
        value_flags : typing___Optional[builtin___int] = None,
        price : typing___Optional[typing___Text] = None,
        qty : typing___Optional[builtin___int] = None,
        value : typing___Optional[typing___Text] = None,
        accruedint : typing___Optional[typing___Text] = None,
        settlecode : typing___Optional[typing___Text] = None,
        reporate : typing___Optional[typing___Text] = None,
        repovalue : typing___Optional[typing___Text] = None,
        repo2value : typing___Optional[typing___Text] = None,
        repoterm : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        class_code : typing___Optional[typing___Text] = None,
        datetime : typing___Optional[type___DateTimeEntry] = None,
        period : typing___Optional[builtin___int] = None,
        open_interest : typing___Optional[typing___Text] = None,
        exchange_code : typing___Optional[typing___Text] = None,
        exec_market : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"datetime",b"datetime",u"flags",b"flags",u"null_flags",b"null_flags",u"value_flags",b"value_flags"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accruedint",b"accruedint",u"class_code",b"class_code",u"datetime",b"datetime",u"exchange_code",b"exchange_code",u"exec_market",b"exec_market",u"flags",b"flags",u"null_flags",b"null_flags",u"open_interest",b"open_interest",u"period",b"period",u"price",b"price",u"qty",b"qty",u"repo2value",b"repo2value",u"reporate",b"reporate",u"repoterm",b"repoterm",u"repovalue",b"repovalue",u"sec_code",b"sec_code",u"settlecode",b"settlecode",u"trade_num",b"trade_num",u"value",b"value",u"value_flags",b"value_flags",u"yield",b"yield"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"flags",b"flags"]) -> typing_extensions___Literal["null_flags","value_flags"]: ...
type___AllTrade = AllTrade

class Trade(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trade_num: builtin___int = ...
    order_num: builtin___int = ...
    brokerref: typing___Text = ...
    userid: typing___Text = ...
    firmid: typing___Text = ...
    canceled_uid: typing___Text = ...
    account: typing___Text = ...
    price: typing___Text = ...
    qty: builtin___int = ...
    value: typing___Text = ...
    accruedint: typing___Text = ...
    settlecode: typing___Text = ...
    cpfirmid: typing___Text = ...
    flags: builtin___int = ...
    price2: typing___Text = ...
    reporate: typing___Text = ...
    client_code: typing___Text = ...
    accrued2: typing___Text = ...
    repoterm: typing___Text = ...
    repovalue: typing___Text = ...
    repo2value: typing___Text = ...
    start_discount: typing___Text = ...
    lower_discount: typing___Text = ...
    upper_discount: typing___Text = ...
    block_securities: typing___Text = ...
    clearing_comission: typing___Text = ...
    exchange_comission: typing___Text = ...
    tech_center_comission: typing___Text = ...
    settle_date: typing___Text = ...
    settle_currency: typing___Text = ...
    trade_currency: typing___Text = ...
    exchange_code: typing___Text = ...
    station_id: typing___Text = ...
    sec_code: typing___Text = ...
    class_code: typing___Text = ...
    bank_acc_id: typing___Text = ...
    broker_comission: typing___Text = ...
    linked_trade: typing___Text = ...
    period: builtin___int = ...
    trans_id: typing___Text = ...
    kind: builtin___int = ...
    clearing_bank_accid: typing___Text = ...
    clearing_firmid: typing___Text = ...
    system_ref: typing___Text = ...
    uid: typing___Text = ...
    lseccode: typing___Text = ...
    order_revision_number: typing___Text = ...
    order_qty: typing___Text = ...
    order_price: typing___Text = ...
    order_exchange_code: typing___Text = ...
    exec_market: typing___Text = ...
    liquidity_indicator: builtin___int = ...
    extref: typing___Text = ...
    ext_trade_flags: typing___Text = ...
    on_behalf_of_uid: typing___Text = ...
    client_qualifier: builtin___int = ...
    client_short_code: typing___Text = ...
    investment_decision_maker_qualifier: builtin___int = ...
    investment_decision_maker_short_code: typing___Text = ...
    executing_trader_qualifier: builtin___int = ...
    executing_trader_short_code: typing___Text = ...
    waiver_flag: builtin___int = ...
    mleg_base_sid: typing___Text = ...
    side_qualifier: builtin___int = ...
    otc_post_trade_indicator: builtin___int = ...
    capacity: builtin___int = ...
    cross_rate: typing___Text = ...

    @property
    def datetime(self) -> type___DateTimeEntry: ...

    @property
    def canceled_datetime(self) -> type___DateTimeEntry: ...

    def __init__(self,
        *,
        trade_num : typing___Optional[builtin___int] = None,
        order_num : typing___Optional[builtin___int] = None,
        brokerref : typing___Optional[typing___Text] = None,
        userid : typing___Optional[typing___Text] = None,
        firmid : typing___Optional[typing___Text] = None,
        canceled_uid : typing___Optional[typing___Text] = None,
        account : typing___Optional[typing___Text] = None,
        price : typing___Optional[typing___Text] = None,
        qty : typing___Optional[builtin___int] = None,
        value : typing___Optional[typing___Text] = None,
        accruedint : typing___Optional[typing___Text] = None,
        settlecode : typing___Optional[typing___Text] = None,
        cpfirmid : typing___Optional[typing___Text] = None,
        flags : typing___Optional[builtin___int] = None,
        price2 : typing___Optional[typing___Text] = None,
        reporate : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        accrued2 : typing___Optional[typing___Text] = None,
        repoterm : typing___Optional[typing___Text] = None,
        repovalue : typing___Optional[typing___Text] = None,
        repo2value : typing___Optional[typing___Text] = None,
        start_discount : typing___Optional[typing___Text] = None,
        lower_discount : typing___Optional[typing___Text] = None,
        upper_discount : typing___Optional[typing___Text] = None,
        block_securities : typing___Optional[typing___Text] = None,
        clearing_comission : typing___Optional[typing___Text] = None,
        exchange_comission : typing___Optional[typing___Text] = None,
        tech_center_comission : typing___Optional[typing___Text] = None,
        settle_date : typing___Optional[typing___Text] = None,
        settle_currency : typing___Optional[typing___Text] = None,
        trade_currency : typing___Optional[typing___Text] = None,
        exchange_code : typing___Optional[typing___Text] = None,
        station_id : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        class_code : typing___Optional[typing___Text] = None,
        datetime : typing___Optional[type___DateTimeEntry] = None,
        bank_acc_id : typing___Optional[typing___Text] = None,
        broker_comission : typing___Optional[typing___Text] = None,
        linked_trade : typing___Optional[typing___Text] = None,
        period : typing___Optional[builtin___int] = None,
        trans_id : typing___Optional[typing___Text] = None,
        kind : typing___Optional[builtin___int] = None,
        clearing_bank_accid : typing___Optional[typing___Text] = None,
        canceled_datetime : typing___Optional[type___DateTimeEntry] = None,
        clearing_firmid : typing___Optional[typing___Text] = None,
        system_ref : typing___Optional[typing___Text] = None,
        uid : typing___Optional[typing___Text] = None,
        lseccode : typing___Optional[typing___Text] = None,
        order_revision_number : typing___Optional[typing___Text] = None,
        order_qty : typing___Optional[typing___Text] = None,
        order_price : typing___Optional[typing___Text] = None,
        order_exchange_code : typing___Optional[typing___Text] = None,
        exec_market : typing___Optional[typing___Text] = None,
        liquidity_indicator : typing___Optional[builtin___int] = None,
        extref : typing___Optional[typing___Text] = None,
        ext_trade_flags : typing___Optional[typing___Text] = None,
        on_behalf_of_uid : typing___Optional[typing___Text] = None,
        client_qualifier : typing___Optional[builtin___int] = None,
        client_short_code : typing___Optional[typing___Text] = None,
        investment_decision_maker_qualifier : typing___Optional[builtin___int] = None,
        investment_decision_maker_short_code : typing___Optional[typing___Text] = None,
        executing_trader_qualifier : typing___Optional[builtin___int] = None,
        executing_trader_short_code : typing___Optional[typing___Text] = None,
        waiver_flag : typing___Optional[builtin___int] = None,
        mleg_base_sid : typing___Optional[typing___Text] = None,
        side_qualifier : typing___Optional[builtin___int] = None,
        otc_post_trade_indicator : typing___Optional[builtin___int] = None,
        capacity : typing___Optional[builtin___int] = None,
        cross_rate : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"canceled_datetime",b"canceled_datetime",u"datetime",b"datetime"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account",b"account",u"accrued2",b"accrued2",u"accruedint",b"accruedint",u"bank_acc_id",b"bank_acc_id",u"block_securities",b"block_securities",u"broker_comission",b"broker_comission",u"brokerref",b"brokerref",u"canceled_datetime",b"canceled_datetime",u"canceled_uid",b"canceled_uid",u"capacity",b"capacity",u"class_code",b"class_code",u"clearing_bank_accid",b"clearing_bank_accid",u"clearing_comission",b"clearing_comission",u"clearing_firmid",b"clearing_firmid",u"client_code",b"client_code",u"client_qualifier",b"client_qualifier",u"client_short_code",b"client_short_code",u"cpfirmid",b"cpfirmid",u"cross_rate",b"cross_rate",u"datetime",b"datetime",u"exchange_code",b"exchange_code",u"exchange_comission",b"exchange_comission",u"exec_market",b"exec_market",u"executing_trader_qualifier",b"executing_trader_qualifier",u"executing_trader_short_code",b"executing_trader_short_code",u"ext_trade_flags",b"ext_trade_flags",u"extref",b"extref",u"firmid",b"firmid",u"flags",b"flags",u"investment_decision_maker_qualifier",b"investment_decision_maker_qualifier",u"investment_decision_maker_short_code",b"investment_decision_maker_short_code",u"kind",b"kind",u"linked_trade",b"linked_trade",u"liquidity_indicator",b"liquidity_indicator",u"lower_discount",b"lower_discount",u"lseccode",b"lseccode",u"mleg_base_sid",b"mleg_base_sid",u"on_behalf_of_uid",b"on_behalf_of_uid",u"order_exchange_code",b"order_exchange_code",u"order_num",b"order_num",u"order_price",b"order_price",u"order_qty",b"order_qty",u"order_revision_number",b"order_revision_number",u"otc_post_trade_indicator",b"otc_post_trade_indicator",u"period",b"period",u"price",b"price",u"price2",b"price2",u"qty",b"qty",u"repo2value",b"repo2value",u"reporate",b"reporate",u"repoterm",b"repoterm",u"repovalue",b"repovalue",u"sec_code",b"sec_code",u"settle_currency",b"settle_currency",u"settle_date",b"settle_date",u"settlecode",b"settlecode",u"side_qualifier",b"side_qualifier",u"start_discount",b"start_discount",u"station_id",b"station_id",u"system_ref",b"system_ref",u"tech_center_comission",b"tech_center_comission",u"trade_currency",b"trade_currency",u"trade_num",b"trade_num",u"trans_id",b"trans_id",u"uid",b"uid",u"upper_discount",b"upper_discount",u"userid",b"userid",u"value",b"value",u"waiver_flag",b"waiver_flag",u"yield",b"yield"]) -> None: ...
type___Trade = Trade

class Order(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    order_num: builtin___int = ...
    flags: builtin___int = ...
    brokerref: typing___Text = ...
    userid: typing___Text = ...
    firmid: typing___Text = ...
    account: typing___Text = ...
    price: typing___Text = ...
    qty: builtin___int = ...
    balance: typing___Text = ...
    value: typing___Text = ...
    accruedint: typing___Text = ...
    trans_id: typing___Text = ...
    client_code: typing___Text = ...
    price2: typing___Text = ...
    settlecode: typing___Text = ...
    uid: typing___Text = ...
    canceled_uid: typing___Text = ...
    exchange_code: typing___Text = ...
    activation_time: typing___Text = ...
    linkedorder: typing___Text = ...
    expiry: typing___Text = ...
    sec_code: typing___Text = ...
    class_code: typing___Text = ...
    bank_acc_id: typing___Text = ...
    value_entry_type: builtin___int = ...
    repoterm: typing___Text = ...
    repovalue: typing___Text = ...
    repo2value: typing___Text = ...
    repo_value_balance: typing___Text = ...
    start_discount: typing___Text = ...
    reject_reason: typing___Text = ...
    ext_order_flags: typing___Text = ...
    min_qty: builtin___int = ...
    exec_type: builtin___int = ...
    side_qualifier: builtin___int = ...
    acnt_type: builtin___int = ...
    capacity: builtin___int = ...
    passive_only_order: builtin___int = ...
    visible: builtin___int = ...
    awg_price: typing___Text = ...
    expiry_time: typing___Text = ...
    revision_number: typing___Text = ...
    price_currency: typing___Text = ...
    ext_order_status: builtin___int = ...
    accepted_uid: typing___Text = ...
    filled_value: typing___Text = ...
    extref: typing___Text = ...
    settle_currency: typing___Text = ...
    on_behalf_of_uid: typing___Text = ...
    client_qualifier: builtin___int = ...
    client_short_code: typing___Text = ...
    investment_decision_maker_qualifier: builtin___int = ...
    investment_decision_maker_short_code: typing___Text = ...
    executing_trader_qualifier: builtin___int = ...
    executing_trader_short_code: typing___Text = ...

    @property
    def datetime(self) -> type___DateTimeEntry: ...

    @property
    def withdraw_datetime(self) -> type___DateTimeEntry: ...

    def __init__(self,
        *,
        order_num : typing___Optional[builtin___int] = None,
        flags : typing___Optional[builtin___int] = None,
        brokerref : typing___Optional[typing___Text] = None,
        userid : typing___Optional[typing___Text] = None,
        firmid : typing___Optional[typing___Text] = None,
        account : typing___Optional[typing___Text] = None,
        price : typing___Optional[typing___Text] = None,
        qty : typing___Optional[builtin___int] = None,
        balance : typing___Optional[typing___Text] = None,
        value : typing___Optional[typing___Text] = None,
        accruedint : typing___Optional[typing___Text] = None,
        trans_id : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        price2 : typing___Optional[typing___Text] = None,
        settlecode : typing___Optional[typing___Text] = None,
        uid : typing___Optional[typing___Text] = None,
        canceled_uid : typing___Optional[typing___Text] = None,
        exchange_code : typing___Optional[typing___Text] = None,
        activation_time : typing___Optional[typing___Text] = None,
        linkedorder : typing___Optional[typing___Text] = None,
        expiry : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        class_code : typing___Optional[typing___Text] = None,
        datetime : typing___Optional[type___DateTimeEntry] = None,
        withdraw_datetime : typing___Optional[type___DateTimeEntry] = None,
        bank_acc_id : typing___Optional[typing___Text] = None,
        value_entry_type : typing___Optional[builtin___int] = None,
        repoterm : typing___Optional[typing___Text] = None,
        repovalue : typing___Optional[typing___Text] = None,
        repo2value : typing___Optional[typing___Text] = None,
        repo_value_balance : typing___Optional[typing___Text] = None,
        start_discount : typing___Optional[typing___Text] = None,
        reject_reason : typing___Optional[typing___Text] = None,
        ext_order_flags : typing___Optional[typing___Text] = None,
        min_qty : typing___Optional[builtin___int] = None,
        exec_type : typing___Optional[builtin___int] = None,
        side_qualifier : typing___Optional[builtin___int] = None,
        acnt_type : typing___Optional[builtin___int] = None,
        capacity : typing___Optional[builtin___int] = None,
        passive_only_order : typing___Optional[builtin___int] = None,
        visible : typing___Optional[builtin___int] = None,
        awg_price : typing___Optional[typing___Text] = None,
        expiry_time : typing___Optional[typing___Text] = None,
        revision_number : typing___Optional[typing___Text] = None,
        price_currency : typing___Optional[typing___Text] = None,
        ext_order_status : typing___Optional[builtin___int] = None,
        accepted_uid : typing___Optional[typing___Text] = None,
        filled_value : typing___Optional[typing___Text] = None,
        extref : typing___Optional[typing___Text] = None,
        settle_currency : typing___Optional[typing___Text] = None,
        on_behalf_of_uid : typing___Optional[typing___Text] = None,
        client_qualifier : typing___Optional[builtin___int] = None,
        client_short_code : typing___Optional[typing___Text] = None,
        investment_decision_maker_qualifier : typing___Optional[builtin___int] = None,
        investment_decision_maker_short_code : typing___Optional[typing___Text] = None,
        executing_trader_qualifier : typing___Optional[builtin___int] = None,
        executing_trader_short_code : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"datetime",b"datetime",u"withdraw_datetime",b"withdraw_datetime"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accepted_uid",b"accepted_uid",u"account",b"account",u"accruedint",b"accruedint",u"acnt_type",b"acnt_type",u"activation_time",b"activation_time",u"awg_price",b"awg_price",u"balance",b"balance",u"bank_acc_id",b"bank_acc_id",u"brokerref",b"brokerref",u"canceled_uid",b"canceled_uid",u"capacity",b"capacity",u"class_code",b"class_code",u"client_code",b"client_code",u"client_qualifier",b"client_qualifier",u"client_short_code",b"client_short_code",u"datetime",b"datetime",u"exchange_code",b"exchange_code",u"exec_type",b"exec_type",u"executing_trader_qualifier",b"executing_trader_qualifier",u"executing_trader_short_code",b"executing_trader_short_code",u"expiry",b"expiry",u"expiry_time",b"expiry_time",u"ext_order_flags",b"ext_order_flags",u"ext_order_status",b"ext_order_status",u"extref",b"extref",u"filled_value",b"filled_value",u"firmid",b"firmid",u"flags",b"flags",u"investment_decision_maker_qualifier",b"investment_decision_maker_qualifier",u"investment_decision_maker_short_code",b"investment_decision_maker_short_code",u"linkedorder",b"linkedorder",u"min_qty",b"min_qty",u"on_behalf_of_uid",b"on_behalf_of_uid",u"order_num",b"order_num",u"passive_only_order",b"passive_only_order",u"price",b"price",u"price2",b"price2",u"price_currency",b"price_currency",u"qty",b"qty",u"reject_reason",b"reject_reason",u"repo2value",b"repo2value",u"repo_value_balance",b"repo_value_balance",u"repoterm",b"repoterm",u"repovalue",b"repovalue",u"revision_number",b"revision_number",u"sec_code",b"sec_code",u"settle_currency",b"settle_currency",u"settlecode",b"settlecode",u"side_qualifier",b"side_qualifier",u"start_discount",b"start_discount",u"trans_id",b"trans_id",u"uid",b"uid",u"userid",b"userid",u"value",b"value",u"value_entry_type",b"value_entry_type",u"visible",b"visible",u"withdraw_datetime",b"withdraw_datetime",u"yield",b"yield"]) -> None: ...
type___Order = Order

class AccountBalance(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    firmid: typing___Text = ...
    sec_code: typing___Text = ...
    trdaccid: typing___Text = ...
    depaccid: typing___Text = ...
    openbal: typing___Text = ...
    currentpos: typing___Text = ...
    plannedpossell: typing___Text = ...
    plannedposbuy: typing___Text = ...
    planbal: typing___Text = ...
    usqtyb: typing___Text = ...
    usqtys: typing___Text = ...
    planned: typing___Text = ...
    settlebal: typing___Text = ...
    bank_acc_id: typing___Text = ...
    firmuse: builtin___int = ...

    def __init__(self,
        *,
        firmid : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        trdaccid : typing___Optional[typing___Text] = None,
        depaccid : typing___Optional[typing___Text] = None,
        openbal : typing___Optional[typing___Text] = None,
        currentpos : typing___Optional[typing___Text] = None,
        plannedpossell : typing___Optional[typing___Text] = None,
        plannedposbuy : typing___Optional[typing___Text] = None,
        planbal : typing___Optional[typing___Text] = None,
        usqtyb : typing___Optional[typing___Text] = None,
        usqtys : typing___Optional[typing___Text] = None,
        planned : typing___Optional[typing___Text] = None,
        settlebal : typing___Optional[typing___Text] = None,
        bank_acc_id : typing___Optional[typing___Text] = None,
        firmuse : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bank_acc_id",b"bank_acc_id",u"currentpos",b"currentpos",u"depaccid",b"depaccid",u"firmid",b"firmid",u"firmuse",b"firmuse",u"openbal",b"openbal",u"planbal",b"planbal",u"planned",b"planned",u"plannedposbuy",b"plannedposbuy",u"plannedpossell",b"plannedpossell",u"sec_code",b"sec_code",u"settlebal",b"settlebal",u"trdaccid",b"trdaccid",u"usqtyb",b"usqtyb",u"usqtys",b"usqtys"]) -> None: ...
type___AccountBalance = AccountBalance

class StopOrder(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    order_num: builtin___int = ...
    ordertime: typing___Text = ...
    flags: builtin___int = ...
    brokerref: typing___Text = ...
    firmid: typing___Text = ...
    account: typing___Text = ...
    condition: builtin___int = ...
    condition_price: typing___Text = ...
    price: typing___Text = ...
    qty: builtin___int = ...
    linkedorder: typing___Text = ...
    expiry: typing___Text = ...
    trans_id: typing___Text = ...
    client_code: typing___Text = ...
    co_order_num: typing___Text = ...
    co_order_price: typing___Text = ...
    stop_order_type: builtin___int = ...
    orderdate: typing___Text = ...
    alltrade_num: typing___Text = ...
    stopflags: builtin___int = ...
    offset: typing___Text = ...
    spread: typing___Text = ...
    balance: typing___Text = ...
    uid: typing___Text = ...
    filled_qty: builtin___int = ...
    withdraw_time: typing___Text = ...
    condition_price2: typing___Text = ...
    active_from_time: typing___Text = ...
    active_to_time: typing___Text = ...
    sec_code: typing___Text = ...
    class_code: typing___Text = ...
    condition_sec_code: typing___Text = ...
    condition_class_code: typing___Text = ...
    canceled_uid: typing___Text = ...

    @property
    def order_date_time(self) -> type___DateTimeEntry: ...

    @property
    def withdraw_datetime(self) -> type___DateTimeEntry: ...

    def __init__(self,
        *,
        order_num : typing___Optional[builtin___int] = None,
        ordertime : typing___Optional[typing___Text] = None,
        flags : typing___Optional[builtin___int] = None,
        brokerref : typing___Optional[typing___Text] = None,
        firmid : typing___Optional[typing___Text] = None,
        account : typing___Optional[typing___Text] = None,
        condition : typing___Optional[builtin___int] = None,
        condition_price : typing___Optional[typing___Text] = None,
        price : typing___Optional[typing___Text] = None,
        qty : typing___Optional[builtin___int] = None,
        linkedorder : typing___Optional[typing___Text] = None,
        expiry : typing___Optional[typing___Text] = None,
        trans_id : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        co_order_num : typing___Optional[typing___Text] = None,
        co_order_price : typing___Optional[typing___Text] = None,
        stop_order_type : typing___Optional[builtin___int] = None,
        orderdate : typing___Optional[typing___Text] = None,
        alltrade_num : typing___Optional[typing___Text] = None,
        stopflags : typing___Optional[builtin___int] = None,
        offset : typing___Optional[typing___Text] = None,
        spread : typing___Optional[typing___Text] = None,
        balance : typing___Optional[typing___Text] = None,
        uid : typing___Optional[typing___Text] = None,
        filled_qty : typing___Optional[builtin___int] = None,
        withdraw_time : typing___Optional[typing___Text] = None,
        condition_price2 : typing___Optional[typing___Text] = None,
        active_from_time : typing___Optional[typing___Text] = None,
        active_to_time : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        class_code : typing___Optional[typing___Text] = None,
        condition_sec_code : typing___Optional[typing___Text] = None,
        condition_class_code : typing___Optional[typing___Text] = None,
        canceled_uid : typing___Optional[typing___Text] = None,
        order_date_time : typing___Optional[type___DateTimeEntry] = None,
        withdraw_datetime : typing___Optional[type___DateTimeEntry] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"order_date_time",b"order_date_time",u"withdraw_datetime",b"withdraw_datetime"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account",b"account",u"active_from_time",b"active_from_time",u"active_to_time",b"active_to_time",u"alltrade_num",b"alltrade_num",u"balance",b"balance",u"brokerref",b"brokerref",u"canceled_uid",b"canceled_uid",u"class_code",b"class_code",u"client_code",b"client_code",u"co_order_num",b"co_order_num",u"co_order_price",b"co_order_price",u"condition",b"condition",u"condition_class_code",b"condition_class_code",u"condition_price",b"condition_price",u"condition_price2",b"condition_price2",u"condition_sec_code",b"condition_sec_code",u"expiry",b"expiry",u"filled_qty",b"filled_qty",u"firmid",b"firmid",u"flags",b"flags",u"linkedorder",b"linkedorder",u"offset",b"offset",u"order_date_time",b"order_date_time",u"order_num",b"order_num",u"orderdate",b"orderdate",u"ordertime",b"ordertime",u"price",b"price",u"qty",b"qty",u"sec_code",b"sec_code",u"spread",b"spread",u"stop_order_type",b"stop_order_type",u"stopflags",b"stopflags",u"trans_id",b"trans_id",u"uid",b"uid",u"withdraw_datetime",b"withdraw_datetime",u"withdraw_time",b"withdraw_time"]) -> None: ...
type___StopOrder = StopOrder

class FuturesLimit(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    firmid: typing___Text = ...
    trdaccid: typing___Text = ...
    limit_type: builtin___int = ...
    liquidity_coef: typing___Text = ...
    cbp_prev_limit: typing___Text = ...
    cbplimit: typing___Text = ...
    cbplused: typing___Text = ...
    cbplplanned: typing___Text = ...
    varmargin: typing___Text = ...
    accruedint: typing___Text = ...
    cbplused_for_orders: typing___Text = ...
    cbplused_for_positions: typing___Text = ...
    options_premium: typing___Text = ...
    ts_comission: typing___Text = ...
    kgo: typing___Text = ...
    currcode: typing___Text = ...
    real_varmargin: typing___Text = ...

    def __init__(self,
        *,
        firmid : typing___Optional[typing___Text] = None,
        trdaccid : typing___Optional[typing___Text] = None,
        limit_type : typing___Optional[builtin___int] = None,
        liquidity_coef : typing___Optional[typing___Text] = None,
        cbp_prev_limit : typing___Optional[typing___Text] = None,
        cbplimit : typing___Optional[typing___Text] = None,
        cbplused : typing___Optional[typing___Text] = None,
        cbplplanned : typing___Optional[typing___Text] = None,
        varmargin : typing___Optional[typing___Text] = None,
        accruedint : typing___Optional[typing___Text] = None,
        cbplused_for_orders : typing___Optional[typing___Text] = None,
        cbplused_for_positions : typing___Optional[typing___Text] = None,
        options_premium : typing___Optional[typing___Text] = None,
        ts_comission : typing___Optional[typing___Text] = None,
        kgo : typing___Optional[typing___Text] = None,
        currcode : typing___Optional[typing___Text] = None,
        real_varmargin : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accruedint",b"accruedint",u"cbp_prev_limit",b"cbp_prev_limit",u"cbplimit",b"cbplimit",u"cbplplanned",b"cbplplanned",u"cbplused",b"cbplused",u"cbplused_for_orders",b"cbplused_for_orders",u"cbplused_for_positions",b"cbplused_for_positions",u"currcode",b"currcode",u"firmid",b"firmid",u"kgo",b"kgo",u"limit_type",b"limit_type",u"liquidity_coef",b"liquidity_coef",u"options_premium",b"options_premium",u"real_varmargin",b"real_varmargin",u"trdaccid",b"trdaccid",u"ts_comission",b"ts_comission",u"varmargin",b"varmargin"]) -> None: ...
type___FuturesLimit = FuturesLimit

class FuturesClientHolding(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    firmid: typing___Text = ...
    trdaccid: typing___Text = ...
    sec_code: typing___Text = ...
    type: builtin___int = ...
    startbuy: typing___Text = ...
    startsell: typing___Text = ...
    startnet: typing___Text = ...
    todaybuy: typing___Text = ...
    todaysell: typing___Text = ...
    totalnet: typing___Text = ...
    openbuys: builtin___int = ...
    opensells: builtin___int = ...
    cbplused: typing___Text = ...
    cbplplanned: typing___Text = ...
    varmargin: typing___Text = ...
    avrposnprice: typing___Text = ...
    positionvalue: typing___Text = ...
    real_varmargin: typing___Text = ...
    total_varmargin: typing___Text = ...
    session_status: builtin___int = ...

    def __init__(self,
        *,
        firmid : typing___Optional[typing___Text] = None,
        trdaccid : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        type : typing___Optional[builtin___int] = None,
        startbuy : typing___Optional[typing___Text] = None,
        startsell : typing___Optional[typing___Text] = None,
        startnet : typing___Optional[typing___Text] = None,
        todaybuy : typing___Optional[typing___Text] = None,
        todaysell : typing___Optional[typing___Text] = None,
        totalnet : typing___Optional[typing___Text] = None,
        openbuys : typing___Optional[builtin___int] = None,
        opensells : typing___Optional[builtin___int] = None,
        cbplused : typing___Optional[typing___Text] = None,
        cbplplanned : typing___Optional[typing___Text] = None,
        varmargin : typing___Optional[typing___Text] = None,
        avrposnprice : typing___Optional[typing___Text] = None,
        positionvalue : typing___Optional[typing___Text] = None,
        real_varmargin : typing___Optional[typing___Text] = None,
        total_varmargin : typing___Optional[typing___Text] = None,
        session_status : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"avrposnprice",b"avrposnprice",u"cbplplanned",b"cbplplanned",u"cbplused",b"cbplused",u"firmid",b"firmid",u"openbuys",b"openbuys",u"opensells",b"opensells",u"positionvalue",b"positionvalue",u"real_varmargin",b"real_varmargin",u"sec_code",b"sec_code",u"session_status",b"session_status",u"startbuy",b"startbuy",u"startnet",b"startnet",u"startsell",b"startsell",u"todaybuy",b"todaybuy",u"todaysell",b"todaysell",u"total_varmargin",b"total_varmargin",u"totalnet",b"totalnet",u"trdaccid",b"trdaccid",u"type",b"type",u"varmargin",b"varmargin"]) -> None: ...
type___FuturesClientHolding = FuturesClientHolding

class MoneyLimit(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    currcode: typing___Text = ...
    tag: typing___Text = ...
    firmid: typing___Text = ...
    client_code: typing___Text = ...
    openbal: typing___Text = ...
    openlimit: typing___Text = ...
    currentbal: typing___Text = ...
    currentlimit: typing___Text = ...
    locked: typing___Text = ...
    locked_value_coef: typing___Text = ...
    locked_margin_value: typing___Text = ...
    leverage: typing___Text = ...
    limit_kind: builtin___int = ...
    wa_position_price: typing___Text = ...
    orders_collateral: typing___Text = ...
    positions_collateral: typing___Text = ...

    def __init__(self,
        *,
        currcode : typing___Optional[typing___Text] = None,
        tag : typing___Optional[typing___Text] = None,
        firmid : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        openbal : typing___Optional[typing___Text] = None,
        openlimit : typing___Optional[typing___Text] = None,
        currentbal : typing___Optional[typing___Text] = None,
        currentlimit : typing___Optional[typing___Text] = None,
        locked : typing___Optional[typing___Text] = None,
        locked_value_coef : typing___Optional[typing___Text] = None,
        locked_margin_value : typing___Optional[typing___Text] = None,
        leverage : typing___Optional[typing___Text] = None,
        limit_kind : typing___Optional[builtin___int] = None,
        wa_position_price : typing___Optional[typing___Text] = None,
        orders_collateral : typing___Optional[typing___Text] = None,
        positions_collateral : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"client_code",b"client_code",u"currcode",b"currcode",u"currentbal",b"currentbal",u"currentlimit",b"currentlimit",u"firmid",b"firmid",u"leverage",b"leverage",u"limit_kind",b"limit_kind",u"locked",b"locked",u"locked_margin_value",b"locked_margin_value",u"locked_value_coef",b"locked_value_coef",u"openbal",b"openbal",u"openlimit",b"openlimit",u"orders_collateral",b"orders_collateral",u"positions_collateral",b"positions_collateral",u"tag",b"tag",u"wa_position_price",b"wa_position_price"]) -> None: ...
type___MoneyLimit = MoneyLimit

class MoneyLimitDelete(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    currcode: typing___Text = ...
    tag: typing___Text = ...
    client_code: typing___Text = ...
    firmid: typing___Text = ...
    limit_kind: builtin___int = ...

    def __init__(self,
        *,
        currcode : typing___Optional[typing___Text] = None,
        tag : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        firmid : typing___Optional[typing___Text] = None,
        limit_kind : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"client_code",b"client_code",u"currcode",b"currcode",u"firmid",b"firmid",u"limit_kind",b"limit_kind",u"tag",b"tag"]) -> None: ...
type___MoneyLimitDelete = MoneyLimitDelete

class DepoLimitDelete(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    sec_code: typing___Text = ...
    trdaccid: typing___Text = ...
    firmid: typing___Text = ...
    client_code: typing___Text = ...
    limit_kind: builtin___int = ...

    def __init__(self,
        *,
        sec_code : typing___Optional[typing___Text] = None,
        trdaccid : typing___Optional[typing___Text] = None,
        firmid : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        limit_kind : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"client_code",b"client_code",u"firmid",b"firmid",u"limit_kind",b"limit_kind",u"sec_code",b"sec_code",u"trdaccid",b"trdaccid"]) -> None: ...
type___DepoLimitDelete = DepoLimitDelete

class FuturesLimitDelete(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    firmid: typing___Text = ...
    limit_type: builtin___int = ...

    def __init__(self,
        *,
        firmid : typing___Optional[typing___Text] = None,
        limit_type : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"firmid",b"firmid",u"limit_type",b"limit_type"]) -> None: ...
type___FuturesLimitDelete = FuturesLimitDelete

class DepoLimit(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    sec_code: typing___Text = ...
    trdaccid: typing___Text = ...
    firmid: typing___Text = ...
    client_code: typing___Text = ...
    openbal: builtin___int = ...
    openlimit: builtin___int = ...
    currentbal: builtin___int = ...
    currentlimit: builtin___int = ...
    locked_sell: builtin___int = ...
    locked_buy: builtin___int = ...
    locked_buy_value: typing___Text = ...
    locked_sell_value: typing___Text = ...
    wa_position_price: typing___Text = ...
    limit_kind: builtin___int = ...

    def __init__(self,
        *,
        sec_code : typing___Optional[typing___Text] = None,
        trdaccid : typing___Optional[typing___Text] = None,
        firmid : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        openbal : typing___Optional[builtin___int] = None,
        openlimit : typing___Optional[builtin___int] = None,
        currentbal : typing___Optional[builtin___int] = None,
        currentlimit : typing___Optional[builtin___int] = None,
        locked_sell : typing___Optional[builtin___int] = None,
        locked_buy : typing___Optional[builtin___int] = None,
        locked_buy_value : typing___Optional[typing___Text] = None,
        locked_sell_value : typing___Optional[typing___Text] = None,
        wa_position_price : typing___Optional[typing___Text] = None,
        limit_kind : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"client_code",b"client_code",u"currentbal",b"currentbal",u"currentlimit",b"currentlimit",u"firmid",b"firmid",u"limit_kind",b"limit_kind",u"locked_buy",b"locked_buy",u"locked_buy_value",b"locked_buy_value",u"locked_sell",b"locked_sell",u"locked_sell_value",b"locked_sell_value",u"openbal",b"openbal",u"openlimit",b"openlimit",u"sec_code",b"sec_code",u"trdaccid",b"trdaccid",u"wa_position_price",b"wa_position_price"]) -> None: ...
type___DepoLimit = DepoLimit

class AccountPosition(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    firmid: typing___Text = ...
    currcode: typing___Text = ...
    tag: typing___Text = ...
    description: typing___Text = ...
    openbal: typing___Text = ...
    currentpos: typing___Text = ...
    plannedpos: typing___Text = ...
    limit1: typing___Text = ...
    limit2: typing___Text = ...
    orderbuy: typing___Text = ...
    ordersell: typing___Text = ...
    netto: typing___Text = ...
    plannedbal: typing___Text = ...
    debit: typing___Text = ...
    credit: typing___Text = ...
    bank_acc_id: typing___Text = ...
    margincall: typing___Text = ...
    settlebal: typing___Text = ...

    def __init__(self,
        *,
        firmid : typing___Optional[typing___Text] = None,
        currcode : typing___Optional[typing___Text] = None,
        tag : typing___Optional[typing___Text] = None,
        description : typing___Optional[typing___Text] = None,
        openbal : typing___Optional[typing___Text] = None,
        currentpos : typing___Optional[typing___Text] = None,
        plannedpos : typing___Optional[typing___Text] = None,
        limit1 : typing___Optional[typing___Text] = None,
        limit2 : typing___Optional[typing___Text] = None,
        orderbuy : typing___Optional[typing___Text] = None,
        ordersell : typing___Optional[typing___Text] = None,
        netto : typing___Optional[typing___Text] = None,
        plannedbal : typing___Optional[typing___Text] = None,
        debit : typing___Optional[typing___Text] = None,
        credit : typing___Optional[typing___Text] = None,
        bank_acc_id : typing___Optional[typing___Text] = None,
        margincall : typing___Optional[typing___Text] = None,
        settlebal : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bank_acc_id",b"bank_acc_id",u"credit",b"credit",u"currcode",b"currcode",u"currentpos",b"currentpos",u"debit",b"debit",u"description",b"description",u"firmid",b"firmid",u"limit1",b"limit1",u"limit2",b"limit2",u"margincall",b"margincall",u"netto",b"netto",u"openbal",b"openbal",u"orderbuy",b"orderbuy",u"ordersell",b"ordersell",u"plannedbal",b"plannedbal",u"plannedpos",b"plannedpos",u"settlebal",b"settlebal",u"tag",b"tag"]) -> None: ...
type___AccountPosition = AccountPosition

class NegDeal(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    neg_deal_num: builtin___int = ...
    neg_deal_time: typing___Text = ...
    flags: builtin___int = ...
    brokerref: typing___Text = ...
    userid: typing___Text = ...
    firmid: typing___Text = ...
    cpuserid: typing___Text = ...
    cpfirmid: typing___Text = ...
    account: typing___Text = ...
    price: typing___Text = ...
    qty: builtin___int = ...
    matchref: typing___Text = ...
    settlecode: typing___Text = ...
    accruedint: typing___Text = ...
    value: typing___Text = ...
    price2: typing___Text = ...
    reporate: typing___Text = ...
    refundrate: typing___Text = ...
    trans_id: typing___Text = ...
    client_code: typing___Text = ...
    repoentry: builtin___int = ...
    repovalue: typing___Text = ...
    repo2value: typing___Text = ...
    repoterm: typing___Text = ...
    start_discount: typing___Text = ...
    lower_discount: typing___Text = ...
    upper_discount: typing___Text = ...
    block_securities: typing___Text = ...
    uid: typing___Text = ...
    withdraw_time: typing___Text = ...
    neg_deal_date: typing___Text = ...
    balance: typing___Text = ...
    origin_repovalue: typing___Text = ...
    origin_qty: typing___Text = ...
    origin_discount: typing___Text = ...
    neg_deal_activation_date: typing___Text = ...
    neg_deal_activation_time: typing___Text = ...
    quoteno: typing___Text = ...
    settle_currency: typing___Text = ...
    sec_code: typing___Text = ...
    class_code: typing___Text = ...
    bank_acc_id: typing___Text = ...
    withdraw_date: typing___Text = ...
    linkedorder: typing___Text = ...
    lseccode: typing___Text = ...
    canceled_uid: typing___Text = ...
    system_ref: typing___Text = ...
    price_currency: typing___Text = ...
    order_exchange_code: typing___Text = ...
    extref: typing___Text = ...
    period: typing___Text = ...
    client_qualifier: builtin___int = ...
    client_short_code: typing___Text = ...
    investment_decision_maker_qualifier: builtin___int = ...
    investment_decision_maker_short_code: typing___Text = ...
    executing_trader_qualifier: builtin___int = ...
    executing_trader_short_code: typing___Text = ...

    @property
    def activation_date_time(self) -> type___DateTimeEntry: ...

    @property
    def withdraw_date_time(self) -> type___DateTimeEntry: ...

    @property
    def date_time(self) -> type___DateTimeEntry: ...

    def __init__(self,
        *,
        neg_deal_num : typing___Optional[builtin___int] = None,
        neg_deal_time : typing___Optional[typing___Text] = None,
        flags : typing___Optional[builtin___int] = None,
        brokerref : typing___Optional[typing___Text] = None,
        userid : typing___Optional[typing___Text] = None,
        firmid : typing___Optional[typing___Text] = None,
        cpuserid : typing___Optional[typing___Text] = None,
        cpfirmid : typing___Optional[typing___Text] = None,
        account : typing___Optional[typing___Text] = None,
        price : typing___Optional[typing___Text] = None,
        qty : typing___Optional[builtin___int] = None,
        matchref : typing___Optional[typing___Text] = None,
        settlecode : typing___Optional[typing___Text] = None,
        accruedint : typing___Optional[typing___Text] = None,
        value : typing___Optional[typing___Text] = None,
        price2 : typing___Optional[typing___Text] = None,
        reporate : typing___Optional[typing___Text] = None,
        refundrate : typing___Optional[typing___Text] = None,
        trans_id : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        repoentry : typing___Optional[builtin___int] = None,
        repovalue : typing___Optional[typing___Text] = None,
        repo2value : typing___Optional[typing___Text] = None,
        repoterm : typing___Optional[typing___Text] = None,
        start_discount : typing___Optional[typing___Text] = None,
        lower_discount : typing___Optional[typing___Text] = None,
        upper_discount : typing___Optional[typing___Text] = None,
        block_securities : typing___Optional[typing___Text] = None,
        uid : typing___Optional[typing___Text] = None,
        withdraw_time : typing___Optional[typing___Text] = None,
        neg_deal_date : typing___Optional[typing___Text] = None,
        balance : typing___Optional[typing___Text] = None,
        origin_repovalue : typing___Optional[typing___Text] = None,
        origin_qty : typing___Optional[typing___Text] = None,
        origin_discount : typing___Optional[typing___Text] = None,
        neg_deal_activation_date : typing___Optional[typing___Text] = None,
        neg_deal_activation_time : typing___Optional[typing___Text] = None,
        quoteno : typing___Optional[typing___Text] = None,
        settle_currency : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        class_code : typing___Optional[typing___Text] = None,
        bank_acc_id : typing___Optional[typing___Text] = None,
        withdraw_date : typing___Optional[typing___Text] = None,
        linkedorder : typing___Optional[typing___Text] = None,
        activation_date_time : typing___Optional[type___DateTimeEntry] = None,
        withdraw_date_time : typing___Optional[type___DateTimeEntry] = None,
        date_time : typing___Optional[type___DateTimeEntry] = None,
        lseccode : typing___Optional[typing___Text] = None,
        canceled_uid : typing___Optional[typing___Text] = None,
        system_ref : typing___Optional[typing___Text] = None,
        price_currency : typing___Optional[typing___Text] = None,
        order_exchange_code : typing___Optional[typing___Text] = None,
        extref : typing___Optional[typing___Text] = None,
        period : typing___Optional[typing___Text] = None,
        client_qualifier : typing___Optional[builtin___int] = None,
        client_short_code : typing___Optional[typing___Text] = None,
        investment_decision_maker_qualifier : typing___Optional[builtin___int] = None,
        investment_decision_maker_short_code : typing___Optional[typing___Text] = None,
        executing_trader_qualifier : typing___Optional[builtin___int] = None,
        executing_trader_short_code : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"activation_date_time",b"activation_date_time",u"date_time",b"date_time",u"withdraw_date_time",b"withdraw_date_time"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account",b"account",u"accruedint",b"accruedint",u"activation_date_time",b"activation_date_time",u"balance",b"balance",u"bank_acc_id",b"bank_acc_id",u"block_securities",b"block_securities",u"brokerref",b"brokerref",u"canceled_uid",b"canceled_uid",u"class_code",b"class_code",u"client_code",b"client_code",u"client_qualifier",b"client_qualifier",u"client_short_code",b"client_short_code",u"cpfirmid",b"cpfirmid",u"cpuserid",b"cpuserid",u"date_time",b"date_time",u"executing_trader_qualifier",b"executing_trader_qualifier",u"executing_trader_short_code",b"executing_trader_short_code",u"extref",b"extref",u"firmid",b"firmid",u"flags",b"flags",u"investment_decision_maker_qualifier",b"investment_decision_maker_qualifier",u"investment_decision_maker_short_code",b"investment_decision_maker_short_code",u"linkedorder",b"linkedorder",u"lower_discount",b"lower_discount",u"lseccode",b"lseccode",u"matchref",b"matchref",u"neg_deal_activation_date",b"neg_deal_activation_date",u"neg_deal_activation_time",b"neg_deal_activation_time",u"neg_deal_date",b"neg_deal_date",u"neg_deal_num",b"neg_deal_num",u"neg_deal_time",b"neg_deal_time",u"order_exchange_code",b"order_exchange_code",u"origin_discount",b"origin_discount",u"origin_qty",b"origin_qty",u"origin_repovalue",b"origin_repovalue",u"period",b"period",u"price",b"price",u"price2",b"price2",u"price_currency",b"price_currency",u"qty",b"qty",u"quoteno",b"quoteno",u"refundrate",b"refundrate",u"repo2value",b"repo2value",u"repoentry",b"repoentry",u"reporate",b"reporate",u"repoterm",b"repoterm",u"repovalue",b"repovalue",u"sec_code",b"sec_code",u"settle_currency",b"settle_currency",u"settlecode",b"settlecode",u"start_discount",b"start_discount",u"system_ref",b"system_ref",u"trans_id",b"trans_id",u"uid",b"uid",u"upper_discount",b"upper_discount",u"userid",b"userid",u"value",b"value",u"withdraw_date",b"withdraw_date",u"withdraw_date_time",b"withdraw_date_time",u"withdraw_time",b"withdraw_time",u"yield",b"yield"]) -> None: ...
type___NegDeal = NegDeal

class NegTrade(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trade_num: builtin___int = ...
    trade_date: typing___Text = ...
    settle_date: typing___Text = ...
    flags: builtin___int = ...
    brokerref: typing___Text = ...
    firmid: typing___Text = ...
    account: typing___Text = ...
    cpfirmid: typing___Text = ...
    cpaccount: typing___Text = ...
    price: typing___Text = ...
    qty: builtin___int = ...
    value: typing___Text = ...
    settlecode: typing___Text = ...
    report_num: typing___Text = ...
    cpreport_num: typing___Text = ...
    accruedint: typing___Text = ...
    repotradeno: typing___Text = ...
    price1: typing___Text = ...
    reporate: typing___Text = ...
    price2: typing___Text = ...
    client_code: typing___Text = ...
    ts_comission: typing___Text = ...
    balance: typing___Text = ...
    settle_time: typing___Text = ...
    amount: typing___Text = ...
    repovalue: typing___Text = ...
    repoterm: typing___Text = ...
    repo2value: typing___Text = ...
    return_value: typing___Text = ...
    discount: typing___Text = ...
    lower_discount: typing___Text = ...
    upper_discount: typing___Text = ...
    block_securities: typing___Text = ...
    urgency_flag: typing___Text = ...
    type: builtin___int = ...
    operation_type: builtin___int = ...
    expected_discount: typing___Text = ...
    expected_quantity: typing___Text = ...
    expected_repovalue: typing___Text = ...
    expected_repo2value: typing___Text = ...
    expected_return_value: typing___Text = ...
    order_num: typing___Text = ...
    report_trade_date: typing___Text = ...
    settled: builtin___int = ...
    clearing_type: builtin___int = ...
    report_comission: typing___Text = ...
    coupon_payment: typing___Text = ...
    principal_payment: typing___Text = ...
    principal_payment_date: typing___Text = ...
    nextdaysettle: typing___Text = ...
    settle_currency: typing___Text = ...
    sec_code: typing___Text = ...
    class_code: typing___Text = ...
    compval: typing___Text = ...
    parenttradeno: typing___Text = ...
    bankid: typing___Text = ...
    bankaccid: typing___Text = ...
    precisebalance: typing___Text = ...
    confirmtime: typing___Text = ...
    ex_flags: builtin___int = ...
    confirmreport: typing___Text = ...
    extref: typing___Text = ...

    def __init__(self,
        *,
        trade_num : typing___Optional[builtin___int] = None,
        trade_date : typing___Optional[typing___Text] = None,
        settle_date : typing___Optional[typing___Text] = None,
        flags : typing___Optional[builtin___int] = None,
        brokerref : typing___Optional[typing___Text] = None,
        firmid : typing___Optional[typing___Text] = None,
        account : typing___Optional[typing___Text] = None,
        cpfirmid : typing___Optional[typing___Text] = None,
        cpaccount : typing___Optional[typing___Text] = None,
        price : typing___Optional[typing___Text] = None,
        qty : typing___Optional[builtin___int] = None,
        value : typing___Optional[typing___Text] = None,
        settlecode : typing___Optional[typing___Text] = None,
        report_num : typing___Optional[typing___Text] = None,
        cpreport_num : typing___Optional[typing___Text] = None,
        accruedint : typing___Optional[typing___Text] = None,
        repotradeno : typing___Optional[typing___Text] = None,
        price1 : typing___Optional[typing___Text] = None,
        reporate : typing___Optional[typing___Text] = None,
        price2 : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        ts_comission : typing___Optional[typing___Text] = None,
        balance : typing___Optional[typing___Text] = None,
        settle_time : typing___Optional[typing___Text] = None,
        amount : typing___Optional[typing___Text] = None,
        repovalue : typing___Optional[typing___Text] = None,
        repoterm : typing___Optional[typing___Text] = None,
        repo2value : typing___Optional[typing___Text] = None,
        return_value : typing___Optional[typing___Text] = None,
        discount : typing___Optional[typing___Text] = None,
        lower_discount : typing___Optional[typing___Text] = None,
        upper_discount : typing___Optional[typing___Text] = None,
        block_securities : typing___Optional[typing___Text] = None,
        urgency_flag : typing___Optional[typing___Text] = None,
        type : typing___Optional[builtin___int] = None,
        operation_type : typing___Optional[builtin___int] = None,
        expected_discount : typing___Optional[typing___Text] = None,
        expected_quantity : typing___Optional[typing___Text] = None,
        expected_repovalue : typing___Optional[typing___Text] = None,
        expected_repo2value : typing___Optional[typing___Text] = None,
        expected_return_value : typing___Optional[typing___Text] = None,
        order_num : typing___Optional[typing___Text] = None,
        report_trade_date : typing___Optional[typing___Text] = None,
        settled : typing___Optional[builtin___int] = None,
        clearing_type : typing___Optional[builtin___int] = None,
        report_comission : typing___Optional[typing___Text] = None,
        coupon_payment : typing___Optional[typing___Text] = None,
        principal_payment : typing___Optional[typing___Text] = None,
        principal_payment_date : typing___Optional[typing___Text] = None,
        nextdaysettle : typing___Optional[typing___Text] = None,
        settle_currency : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        class_code : typing___Optional[typing___Text] = None,
        compval : typing___Optional[typing___Text] = None,
        parenttradeno : typing___Optional[typing___Text] = None,
        bankid : typing___Optional[typing___Text] = None,
        bankaccid : typing___Optional[typing___Text] = None,
        precisebalance : typing___Optional[typing___Text] = None,
        confirmtime : typing___Optional[typing___Text] = None,
        ex_flags : typing___Optional[builtin___int] = None,
        confirmreport : typing___Optional[typing___Text] = None,
        extref : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account",b"account",u"accruedint",b"accruedint",u"amount",b"amount",u"balance",b"balance",u"bankaccid",b"bankaccid",u"bankid",b"bankid",u"block_securities",b"block_securities",u"brokerref",b"brokerref",u"class_code",b"class_code",u"clearing_type",b"clearing_type",u"client_code",b"client_code",u"compval",b"compval",u"confirmreport",b"confirmreport",u"confirmtime",b"confirmtime",u"coupon_payment",b"coupon_payment",u"cpaccount",b"cpaccount",u"cpfirmid",b"cpfirmid",u"cpreport_num",b"cpreport_num",u"discount",b"discount",u"ex_flags",b"ex_flags",u"expected_discount",b"expected_discount",u"expected_quantity",b"expected_quantity",u"expected_repo2value",b"expected_repo2value",u"expected_repovalue",b"expected_repovalue",u"expected_return_value",b"expected_return_value",u"extref",b"extref",u"firmid",b"firmid",u"flags",b"flags",u"lower_discount",b"lower_discount",u"nextdaysettle",b"nextdaysettle",u"operation_type",b"operation_type",u"order_num",b"order_num",u"parenttradeno",b"parenttradeno",u"precisebalance",b"precisebalance",u"price",b"price",u"price1",b"price1",u"price2",b"price2",u"principal_payment",b"principal_payment",u"principal_payment_date",b"principal_payment_date",u"qty",b"qty",u"repo2value",b"repo2value",u"reporate",b"reporate",u"report_comission",b"report_comission",u"report_num",b"report_num",u"report_trade_date",b"report_trade_date",u"repoterm",b"repoterm",u"repotradeno",b"repotradeno",u"repovalue",b"repovalue",u"return_value",b"return_value",u"sec_code",b"sec_code",u"settle_currency",b"settle_currency",u"settle_date",b"settle_date",u"settle_time",b"settle_time",u"settlecode",b"settlecode",u"settled",b"settled",u"trade_date",b"trade_date",u"trade_num",b"trade_num",u"ts_comission",b"ts_comission",u"type",b"type",u"upper_discount",b"upper_discount",u"urgency_flag",b"urgency_flag",u"value",b"value"]) -> None: ...
type___NegTrade = NegTrade

class Security(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    code: typing___Text = ...
    name: typing___Text = ...
    short_name: typing___Text = ...
    class_code: typing___Text = ...
    class_name: typing___Text = ...
    face_value: typing___Text = ...
    face_unit: typing___Text = ...
    scale: typing___Text = ...
    mat_date: typing___Text = ...
    lot_size: typing___Text = ...
    isin_code: typing___Text = ...
    min_price_step: typing___Text = ...

    def __init__(self,
        *,
        code : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        short_name : typing___Optional[typing___Text] = None,
        class_code : typing___Optional[typing___Text] = None,
        class_name : typing___Optional[typing___Text] = None,
        face_value : typing___Optional[typing___Text] = None,
        face_unit : typing___Optional[typing___Text] = None,
        scale : typing___Optional[typing___Text] = None,
        mat_date : typing___Optional[typing___Text] = None,
        lot_size : typing___Optional[typing___Text] = None,
        isin_code : typing___Optional[typing___Text] = None,
        min_price_step : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"class_code",b"class_code",u"class_name",b"class_name",u"code",b"code",u"face_unit",b"face_unit",u"face_value",b"face_value",u"isin_code",b"isin_code",u"lot_size",b"lot_size",u"mat_date",b"mat_date",u"min_price_step",b"min_price_step",u"name",b"name",u"scale",b"scale",u"short_name",b"short_name"]) -> None: ...
type___Security = Security

class CandleEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    open: typing___Text = ...
    close: typing___Text = ...
    high: typing___Text = ...
    low: typing___Text = ...
    volume: typing___Text = ...
    does_exist: builtin___int = ...

    @property
    def datetime(self) -> type___DateTimeEntry: ...

    def __init__(self,
        *,
        open : typing___Optional[typing___Text] = None,
        close : typing___Optional[typing___Text] = None,
        high : typing___Optional[typing___Text] = None,
        low : typing___Optional[typing___Text] = None,
        volume : typing___Optional[typing___Text] = None,
        datetime : typing___Optional[type___DateTimeEntry] = None,
        does_exist : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"datetime",b"datetime"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"close",b"close",u"datetime",b"datetime",u"does_exist",b"does_exist",u"high",b"high",u"low",b"low",u"open",b"open",u"volume",b"volume"]) -> None: ...
type___CandleEntry = CandleEntry

class DateTimeEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    mcs: builtin___int = ...
    ms: builtin___int = ...
    sec: builtin___int = ...
    min: builtin___int = ...
    hour: builtin___int = ...
    day: builtin___int = ...
    week_day: builtin___int = ...
    month: builtin___int = ...
    year: builtin___int = ...

    def __init__(self,
        *,
        mcs : typing___Optional[builtin___int] = None,
        ms : typing___Optional[builtin___int] = None,
        sec : typing___Optional[builtin___int] = None,
        min : typing___Optional[builtin___int] = None,
        hour : typing___Optional[builtin___int] = None,
        day : typing___Optional[builtin___int] = None,
        week_day : typing___Optional[builtin___int] = None,
        month : typing___Optional[builtin___int] = None,
        year : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"day",b"day",u"hour",b"hour",u"mcs",b"mcs",u"min",b"min",u"month",b"month",u"ms",b"ms",u"sec",b"sec",u"week_day",b"week_day",u"year",b"year"]) -> None: ...
type___DateTimeEntry = DateTimeEntry

class Transaction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trans_id: builtin___int = ...
    status: builtin___int = ...
    result_msg: typing___Text = ...
    uid: typing___Text = ...
    flags: builtin___int = ...
    server_trans_id: typing___Text = ...
    order_num: typing___Text = ...
    price: typing___Text = ...
    quantity: typing___Text = ...
    balance: typing___Text = ...
    firm_id: typing___Text = ...
    account: typing___Text = ...
    client_code: typing___Text = ...
    brokerref: typing___Text = ...
    class_code: typing___Text = ...
    sec_code: typing___Text = ...
    exchange_code: typing___Text = ...

    @property
    def date_time(self) -> type___DateTimeEntry: ...

    def __init__(self,
        *,
        trans_id : typing___Optional[builtin___int] = None,
        status : typing___Optional[builtin___int] = None,
        result_msg : typing___Optional[typing___Text] = None,
        date_time : typing___Optional[type___DateTimeEntry] = None,
        uid : typing___Optional[typing___Text] = None,
        flags : typing___Optional[builtin___int] = None,
        server_trans_id : typing___Optional[typing___Text] = None,
        order_num : typing___Optional[typing___Text] = None,
        price : typing___Optional[typing___Text] = None,
        quantity : typing___Optional[typing___Text] = None,
        balance : typing___Optional[typing___Text] = None,
        firm_id : typing___Optional[typing___Text] = None,
        account : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        brokerref : typing___Optional[typing___Text] = None,
        class_code : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        exchange_code : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"date_time",b"date_time"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account",b"account",u"balance",b"balance",u"brokerref",b"brokerref",u"class_code",b"class_code",u"client_code",b"client_code",u"date_time",b"date_time",u"exchange_code",b"exchange_code",u"firm_id",b"firm_id",u"flags",b"flags",u"order_num",b"order_num",u"price",b"price",u"quantity",b"quantity",u"result_msg",b"result_msg",u"sec_code",b"sec_code",u"server_trans_id",b"server_trans_id",u"status",b"status",u"trans_id",b"trans_id",u"uid",b"uid"]) -> None: ...
type___Transaction = Transaction

class ParamEventInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class_code: typing___Text = ...
    sec_code: typing___Text = ...

    def __init__(self,
        *,
        class_code : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"class_code",b"class_code",u"sec_code",b"sec_code"]) -> None: ...
type___ParamEventInfo = ParamEventInfo

class QuoteEventInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class_code: typing___Text = ...
    sec_code: typing___Text = ...

    def __init__(self,
        *,
        class_code : typing___Optional[typing___Text] = None,
        sec_code : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"class_code",b"class_code",u"sec_code",b"sec_code"]) -> None: ...
type___QuoteEventInfo = QuoteEventInfo

class ConnectedEventInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    flag: builtin___bool = ...

    def __init__(self,
        *,
        flag : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"flag",b"flag"]) -> None: ...
type___ConnectedEventInfo = ConnectedEventInfo

class StopEventInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    flag: builtin___int = ...

    def __init__(self,
        *,
        flag : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"flag",b"flag"]) -> None: ...
type___StopEventInfo = StopEventInfo

class DataSourceTime(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    year: builtin___int = ...
    month: builtin___int = ...
    day: builtin___int = ...
    week_day: builtin___int = ...
    hour: builtin___int = ...
    min: builtin___int = ...
    sec: builtin___int = ...
    ms: builtin___int = ...
    count: builtin___int = ...

    def __init__(self,
        *,
        year : typing___Optional[builtin___int] = None,
        month : typing___Optional[builtin___int] = None,
        day : typing___Optional[builtin___int] = None,
        week_day : typing___Optional[builtin___int] = None,
        hour : typing___Optional[builtin___int] = None,
        min : typing___Optional[builtin___int] = None,
        sec : typing___Optional[builtin___int] = None,
        ms : typing___Optional[builtin___int] = None,
        count : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"count",b"count",u"day",b"day",u"hour",b"hour",u"min",b"min",u"month",b"month",u"ms",b"ms",u"sec",b"sec",u"week_day",b"week_day",u"year",b"year"]) -> None: ...
type___DataSourceTime = DataSourceTime

class DataSourceUpdateInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    uuid: typing___Text = ...
    index: builtin___int = ...
    open: typing___Text = ...
    high: typing___Text = ...
    low: typing___Text = ...
    close: typing___Text = ...
    volume: typing___Text = ...
    null_size: builtin___bool = ...
    value_size: builtin___int = ...

    @property
    def time(self) -> type___DataSourceTime: ...

    def __init__(self,
        *,
        uuid : typing___Optional[typing___Text] = None,
        index : typing___Optional[builtin___int] = None,
        open : typing___Optional[typing___Text] = None,
        high : typing___Optional[typing___Text] = None,
        low : typing___Optional[typing___Text] = None,
        close : typing___Optional[typing___Text] = None,
        volume : typing___Optional[typing___Text] = None,
        time : typing___Optional[type___DataSourceTime] = None,
        null_size : typing___Optional[builtin___bool] = None,
        value_size : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"null_size",b"null_size",u"size",b"size",u"time",b"time",u"value_size",b"value_size"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"close",b"close",u"high",b"high",u"index",b"index",u"low",b"low",u"null_size",b"null_size",u"open",b"open",u"size",b"size",u"time",b"time",u"uuid",b"uuid",u"value_size",b"value_size",u"volume",b"volume"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"size",b"size"]) -> typing_extensions___Literal["null_size","value_size"]: ...
type___DataSourceUpdateInfo = DataSourceUpdateInfo
