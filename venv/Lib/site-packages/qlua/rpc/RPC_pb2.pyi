# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

ProcedureTypeValue = typing___NewType('ProcedureTypeValue', builtin___int)
type___ProcedureTypeValue = ProcedureTypeValue
ProcedureType: _ProcedureType
class _ProcedureType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ProcedureTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    PROCEDURE_TYPE_UNKNOWN = typing___cast(ProcedureTypeValue, 0)
    IS_CONNECTED = typing___cast(ProcedureTypeValue, 1)
    GET_SCRIPT_PATH = typing___cast(ProcedureTypeValue, 2)
    GET_INFO_PARAM = typing___cast(ProcedureTypeValue, 3)
    MESSAGE = typing___cast(ProcedureTypeValue, 4)
    SLEEP = typing___cast(ProcedureTypeValue, 5)
    GET_WORKING_FOLDER = typing___cast(ProcedureTypeValue, 6)
    PRINT_DBG_STR = typing___cast(ProcedureTypeValue, 7)
    GET_ITEM = typing___cast(ProcedureTypeValue, 8)
    GET_ORDER_BY_NUMBER = typing___cast(ProcedureTypeValue, 9)
    GET_NUMBER_OF = typing___cast(ProcedureTypeValue, 10)
    SEARCH_ITEMS = typing___cast(ProcedureTypeValue, 11)
    GET_CLASSES_LIST = typing___cast(ProcedureTypeValue, 12)
    GET_CLASS_INFO = typing___cast(ProcedureTypeValue, 13)
    GET_CLASS_SECURITIES = typing___cast(ProcedureTypeValue, 14)
    GET_MONEY = typing___cast(ProcedureTypeValue, 15)
    GET_MONEY_EX = typing___cast(ProcedureTypeValue, 16)
    GET_DEPO = typing___cast(ProcedureTypeValue, 17)
    GET_DEPO_EX = typing___cast(ProcedureTypeValue, 18)
    GET_FUTURES_LIMIT = typing___cast(ProcedureTypeValue, 19)
    GET_FUTURES_HOLDING = typing___cast(ProcedureTypeValue, 20)
    GET_SECURITY_INFO = typing___cast(ProcedureTypeValue, 21)
    GET_TRADE_DATE = typing___cast(ProcedureTypeValue, 22)
    GET_QUOTE_LEVEL2 = typing___cast(ProcedureTypeValue, 23)
    GET_LINES_COUNT = typing___cast(ProcedureTypeValue, 24)
    GET_NUM_CANDLES = typing___cast(ProcedureTypeValue, 25)
    GET_CANDLES_BY_INDEX = typing___cast(ProcedureTypeValue, 26)
    CREATE_DATA_SOURCE = typing___cast(ProcedureTypeValue, 27)
    DS_SET_UPDATE_CALLBACK = typing___cast(ProcedureTypeValue, 28)
    DS_O = typing___cast(ProcedureTypeValue, 29)
    DS_H = typing___cast(ProcedureTypeValue, 30)
    DS_L = typing___cast(ProcedureTypeValue, 31)
    DS_C = typing___cast(ProcedureTypeValue, 32)
    DS_V = typing___cast(ProcedureTypeValue, 33)
    DS_T = typing___cast(ProcedureTypeValue, 34)
    DS_SIZE = typing___cast(ProcedureTypeValue, 35)
    DS_CLOSE = typing___cast(ProcedureTypeValue, 36)
    DS_SET_EMPTY_CALLBACK = typing___cast(ProcedureTypeValue, 37)
    SEND_TRANSACTION = typing___cast(ProcedureTypeValue, 38)
    CALC_BUY_SELL = typing___cast(ProcedureTypeValue, 39)
    GET_PARAM_EX = typing___cast(ProcedureTypeValue, 40)
    GET_PARAM_EX_2 = typing___cast(ProcedureTypeValue, 41)
    GET_PORTFOLIO_INFO = typing___cast(ProcedureTypeValue, 42)
    GET_PORTFOLIO_INFO_EX = typing___cast(ProcedureTypeValue, 43)
    GET_BUY_SELL_INFO = typing___cast(ProcedureTypeValue, 44)
    GET_BUY_SELL_INFO_EX = typing___cast(ProcedureTypeValue, 45)
    ADD_COLUMN = typing___cast(ProcedureTypeValue, 46)
    ALLOC_TABLE = typing___cast(ProcedureTypeValue, 47)
    CLEAR = typing___cast(ProcedureTypeValue, 48)
    CREATE_WINDOW = typing___cast(ProcedureTypeValue, 49)
    DELETE_ROW = typing___cast(ProcedureTypeValue, 50)
    DESTROY_TABLE = typing___cast(ProcedureTypeValue, 51)
    INSERT_ROW = typing___cast(ProcedureTypeValue, 52)
    IS_WINDOW_CLOSED = typing___cast(ProcedureTypeValue, 53)
    GET_CELL = typing___cast(ProcedureTypeValue, 54)
    GET_TABLE_SIZE = typing___cast(ProcedureTypeValue, 55)
    GET_WINDOW_CAPTION = typing___cast(ProcedureTypeValue, 56)
    GET_WINDOW_RECT = typing___cast(ProcedureTypeValue, 57)
    SET_CELL = typing___cast(ProcedureTypeValue, 58)
    SET_WINDOW_CAPTION = typing___cast(ProcedureTypeValue, 59)
    SET_WINDOW_POS = typing___cast(ProcedureTypeValue, 60)
    SET_TABLE_NOTIFICATION_CALLBACK = typing___cast(ProcedureTypeValue, 61)
    RGB = typing___cast(ProcedureTypeValue, 62)
    SET_COLOR = typing___cast(ProcedureTypeValue, 63)
    HIGHLIGHT = typing___cast(ProcedureTypeValue, 64)
    SET_SELECTED_ROW = typing___cast(ProcedureTypeValue, 65)
    ADD_LABEL = typing___cast(ProcedureTypeValue, 66)
    DEL_LABEL = typing___cast(ProcedureTypeValue, 67)
    DEL_ALL_LABELS = typing___cast(ProcedureTypeValue, 68)
    GET_LABEL_PARAMS = typing___cast(ProcedureTypeValue, 69)
    SET_LABEL_PARAMS = typing___cast(ProcedureTypeValue, 70)
    SUBSCRIBE_LEVEL_II_QUOTES = typing___cast(ProcedureTypeValue, 71)
    UNSUBSCRIBE_LEVEL_II_QUOTES = typing___cast(ProcedureTypeValue, 72)
    IS_SUBSCRIBED_LEVEL_II_QUOTES = typing___cast(ProcedureTypeValue, 73)
    PARAM_REQUEST = typing___cast(ProcedureTypeValue, 74)
    CANCEL_PARAM_REQUEST = typing___cast(ProcedureTypeValue, 75)
    BIT_TOHEX = typing___cast(ProcedureTypeValue, 76)
    BIT_BNOT = typing___cast(ProcedureTypeValue, 77)
    BIT_BAND = typing___cast(ProcedureTypeValue, 78)
    BIT_BOR = typing___cast(ProcedureTypeValue, 79)
    BIT_BXOR = typing___cast(ProcedureTypeValue, 80)
    BIT_TEST = typing___cast(ProcedureTypeValue, 81)
    OS_SYSDATE = typing___cast(ProcedureTypeValue, 82)
PROCEDURE_TYPE_UNKNOWN = typing___cast(ProcedureTypeValue, 0)
IS_CONNECTED = typing___cast(ProcedureTypeValue, 1)
GET_SCRIPT_PATH = typing___cast(ProcedureTypeValue, 2)
GET_INFO_PARAM = typing___cast(ProcedureTypeValue, 3)
MESSAGE = typing___cast(ProcedureTypeValue, 4)
SLEEP = typing___cast(ProcedureTypeValue, 5)
GET_WORKING_FOLDER = typing___cast(ProcedureTypeValue, 6)
PRINT_DBG_STR = typing___cast(ProcedureTypeValue, 7)
GET_ITEM = typing___cast(ProcedureTypeValue, 8)
GET_ORDER_BY_NUMBER = typing___cast(ProcedureTypeValue, 9)
GET_NUMBER_OF = typing___cast(ProcedureTypeValue, 10)
SEARCH_ITEMS = typing___cast(ProcedureTypeValue, 11)
GET_CLASSES_LIST = typing___cast(ProcedureTypeValue, 12)
GET_CLASS_INFO = typing___cast(ProcedureTypeValue, 13)
GET_CLASS_SECURITIES = typing___cast(ProcedureTypeValue, 14)
GET_MONEY = typing___cast(ProcedureTypeValue, 15)
GET_MONEY_EX = typing___cast(ProcedureTypeValue, 16)
GET_DEPO = typing___cast(ProcedureTypeValue, 17)
GET_DEPO_EX = typing___cast(ProcedureTypeValue, 18)
GET_FUTURES_LIMIT = typing___cast(ProcedureTypeValue, 19)
GET_FUTURES_HOLDING = typing___cast(ProcedureTypeValue, 20)
GET_SECURITY_INFO = typing___cast(ProcedureTypeValue, 21)
GET_TRADE_DATE = typing___cast(ProcedureTypeValue, 22)
GET_QUOTE_LEVEL2 = typing___cast(ProcedureTypeValue, 23)
GET_LINES_COUNT = typing___cast(ProcedureTypeValue, 24)
GET_NUM_CANDLES = typing___cast(ProcedureTypeValue, 25)
GET_CANDLES_BY_INDEX = typing___cast(ProcedureTypeValue, 26)
CREATE_DATA_SOURCE = typing___cast(ProcedureTypeValue, 27)
DS_SET_UPDATE_CALLBACK = typing___cast(ProcedureTypeValue, 28)
DS_O = typing___cast(ProcedureTypeValue, 29)
DS_H = typing___cast(ProcedureTypeValue, 30)
DS_L = typing___cast(ProcedureTypeValue, 31)
DS_C = typing___cast(ProcedureTypeValue, 32)
DS_V = typing___cast(ProcedureTypeValue, 33)
DS_T = typing___cast(ProcedureTypeValue, 34)
DS_SIZE = typing___cast(ProcedureTypeValue, 35)
DS_CLOSE = typing___cast(ProcedureTypeValue, 36)
DS_SET_EMPTY_CALLBACK = typing___cast(ProcedureTypeValue, 37)
SEND_TRANSACTION = typing___cast(ProcedureTypeValue, 38)
CALC_BUY_SELL = typing___cast(ProcedureTypeValue, 39)
GET_PARAM_EX = typing___cast(ProcedureTypeValue, 40)
GET_PARAM_EX_2 = typing___cast(ProcedureTypeValue, 41)
GET_PORTFOLIO_INFO = typing___cast(ProcedureTypeValue, 42)
GET_PORTFOLIO_INFO_EX = typing___cast(ProcedureTypeValue, 43)
GET_BUY_SELL_INFO = typing___cast(ProcedureTypeValue, 44)
GET_BUY_SELL_INFO_EX = typing___cast(ProcedureTypeValue, 45)
ADD_COLUMN = typing___cast(ProcedureTypeValue, 46)
ALLOC_TABLE = typing___cast(ProcedureTypeValue, 47)
CLEAR = typing___cast(ProcedureTypeValue, 48)
CREATE_WINDOW = typing___cast(ProcedureTypeValue, 49)
DELETE_ROW = typing___cast(ProcedureTypeValue, 50)
DESTROY_TABLE = typing___cast(ProcedureTypeValue, 51)
INSERT_ROW = typing___cast(ProcedureTypeValue, 52)
IS_WINDOW_CLOSED = typing___cast(ProcedureTypeValue, 53)
GET_CELL = typing___cast(ProcedureTypeValue, 54)
GET_TABLE_SIZE = typing___cast(ProcedureTypeValue, 55)
GET_WINDOW_CAPTION = typing___cast(ProcedureTypeValue, 56)
GET_WINDOW_RECT = typing___cast(ProcedureTypeValue, 57)
SET_CELL = typing___cast(ProcedureTypeValue, 58)
SET_WINDOW_CAPTION = typing___cast(ProcedureTypeValue, 59)
SET_WINDOW_POS = typing___cast(ProcedureTypeValue, 60)
SET_TABLE_NOTIFICATION_CALLBACK = typing___cast(ProcedureTypeValue, 61)
RGB = typing___cast(ProcedureTypeValue, 62)
SET_COLOR = typing___cast(ProcedureTypeValue, 63)
HIGHLIGHT = typing___cast(ProcedureTypeValue, 64)
SET_SELECTED_ROW = typing___cast(ProcedureTypeValue, 65)
ADD_LABEL = typing___cast(ProcedureTypeValue, 66)
DEL_LABEL = typing___cast(ProcedureTypeValue, 67)
DEL_ALL_LABELS = typing___cast(ProcedureTypeValue, 68)
GET_LABEL_PARAMS = typing___cast(ProcedureTypeValue, 69)
SET_LABEL_PARAMS = typing___cast(ProcedureTypeValue, 70)
SUBSCRIBE_LEVEL_II_QUOTES = typing___cast(ProcedureTypeValue, 71)
UNSUBSCRIBE_LEVEL_II_QUOTES = typing___cast(ProcedureTypeValue, 72)
IS_SUBSCRIBED_LEVEL_II_QUOTES = typing___cast(ProcedureTypeValue, 73)
PARAM_REQUEST = typing___cast(ProcedureTypeValue, 74)
CANCEL_PARAM_REQUEST = typing___cast(ProcedureTypeValue, 75)
BIT_TOHEX = typing___cast(ProcedureTypeValue, 76)
BIT_BNOT = typing___cast(ProcedureTypeValue, 77)
BIT_BAND = typing___cast(ProcedureTypeValue, 78)
BIT_BOR = typing___cast(ProcedureTypeValue, 79)
BIT_BXOR = typing___cast(ProcedureTypeValue, 80)
BIT_TEST = typing___cast(ProcedureTypeValue, 81)
OS_SYSDATE = typing___cast(ProcedureTypeValue, 82)
type___ProcedureType = ProcedureType

class Request(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    type: type___ProcedureTypeValue = ...
    args: builtin___bytes = ...

    def __init__(self,
        *,
        type : typing___Optional[type___ProcedureTypeValue] = None,
        args : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"args",b"args",u"type",b"type"]) -> None: ...
type___Request = Request

class Response(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    is_error: builtin___bool = ...
    result: builtin___bytes = ...

    def __init__(self,
        *,
        is_error : typing___Optional[builtin___bool] = None,
        result : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"is_error",b"is_error",u"result",b"result"]) -> None: ...
type___Response = Response

class Error(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    code: builtin___int = ...
    message: typing___Text = ...

    def __init__(self,
        *,
        code : typing___Optional[builtin___int] = None,
        message : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"code",b"code",u"message",b"message"]) -> None: ...
type___Error = Error
