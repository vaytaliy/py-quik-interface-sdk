# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class PortfolioInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    is_leverage: typing___Text = ...
    in_assets: typing___Text = ...
    leverage: typing___Text = ...
    open_limit: typing___Text = ...
    val_short: typing___Text = ...
    val_long: typing___Text = ...
    val_long_margin: typing___Text = ...
    val_long_asset: typing___Text = ...
    assets: typing___Text = ...
    cur_leverage: typing___Text = ...
    margin: typing___Text = ...
    lim_all: typing___Text = ...
    av_lim_all: typing___Text = ...
    locked_buy: typing___Text = ...
    locked_buy_margin: typing___Text = ...
    locked_buy_asset: typing___Text = ...
    locked_sell: typing___Text = ...
    locked_value_coef: typing___Text = ...
    in_all_assets: typing___Text = ...
    all_assets: typing___Text = ...
    profit_loss: typing___Text = ...
    rate_change: typing___Text = ...
    lim_buy: typing___Text = ...
    lim_sell: typing___Text = ...
    lim_non_margin: typing___Text = ...
    lim_buy_asset: typing___Text = ...
    val_short_net: typing___Text = ...
    val_long_net: typing___Text = ...
    total_money_bal: typing___Text = ...
    total_locked_money: typing___Text = ...
    haircuts: typing___Text = ...
    assets_without_hc: typing___Text = ...
    status_coef: typing___Text = ...
    varmargin: typing___Text = ...
    go_for_positions: typing___Text = ...
    go_for_orders: typing___Text = ...
    rate_futures: typing___Text = ...
    is_qual_client: typing___Text = ...
    is_futures: typing___Text = ...
    curr_tag: typing___Text = ...

    def __init__(self,
        *,
        is_leverage : typing___Optional[typing___Text] = None,
        in_assets : typing___Optional[typing___Text] = None,
        leverage : typing___Optional[typing___Text] = None,
        open_limit : typing___Optional[typing___Text] = None,
        val_short : typing___Optional[typing___Text] = None,
        val_long : typing___Optional[typing___Text] = None,
        val_long_margin : typing___Optional[typing___Text] = None,
        val_long_asset : typing___Optional[typing___Text] = None,
        assets : typing___Optional[typing___Text] = None,
        cur_leverage : typing___Optional[typing___Text] = None,
        margin : typing___Optional[typing___Text] = None,
        lim_all : typing___Optional[typing___Text] = None,
        av_lim_all : typing___Optional[typing___Text] = None,
        locked_buy : typing___Optional[typing___Text] = None,
        locked_buy_margin : typing___Optional[typing___Text] = None,
        locked_buy_asset : typing___Optional[typing___Text] = None,
        locked_sell : typing___Optional[typing___Text] = None,
        locked_value_coef : typing___Optional[typing___Text] = None,
        in_all_assets : typing___Optional[typing___Text] = None,
        all_assets : typing___Optional[typing___Text] = None,
        profit_loss : typing___Optional[typing___Text] = None,
        rate_change : typing___Optional[typing___Text] = None,
        lim_buy : typing___Optional[typing___Text] = None,
        lim_sell : typing___Optional[typing___Text] = None,
        lim_non_margin : typing___Optional[typing___Text] = None,
        lim_buy_asset : typing___Optional[typing___Text] = None,
        val_short_net : typing___Optional[typing___Text] = None,
        val_long_net : typing___Optional[typing___Text] = None,
        total_money_bal : typing___Optional[typing___Text] = None,
        total_locked_money : typing___Optional[typing___Text] = None,
        haircuts : typing___Optional[typing___Text] = None,
        assets_without_hc : typing___Optional[typing___Text] = None,
        status_coef : typing___Optional[typing___Text] = None,
        varmargin : typing___Optional[typing___Text] = None,
        go_for_positions : typing___Optional[typing___Text] = None,
        go_for_orders : typing___Optional[typing___Text] = None,
        rate_futures : typing___Optional[typing___Text] = None,
        is_qual_client : typing___Optional[typing___Text] = None,
        is_futures : typing___Optional[typing___Text] = None,
        curr_tag : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"all_assets",b"all_assets",u"assets",b"assets",u"assets_without_hc",b"assets_without_hc",u"av_lim_all",b"av_lim_all",u"cur_leverage",b"cur_leverage",u"curr_tag",b"curr_tag",u"go_for_orders",b"go_for_orders",u"go_for_positions",b"go_for_positions",u"haircuts",b"haircuts",u"in_all_assets",b"in_all_assets",u"in_assets",b"in_assets",u"is_futures",b"is_futures",u"is_leverage",b"is_leverage",u"is_qual_client",b"is_qual_client",u"leverage",b"leverage",u"lim_all",b"lim_all",u"lim_buy",b"lim_buy",u"lim_buy_asset",b"lim_buy_asset",u"lim_non_margin",b"lim_non_margin",u"lim_sell",b"lim_sell",u"locked_buy",b"locked_buy",u"locked_buy_asset",b"locked_buy_asset",u"locked_buy_margin",b"locked_buy_margin",u"locked_sell",b"locked_sell",u"locked_value_coef",b"locked_value_coef",u"margin",b"margin",u"open_limit",b"open_limit",u"profit_loss",b"profit_loss",u"rate_change",b"rate_change",u"rate_futures",b"rate_futures",u"status_coef",b"status_coef",u"total_locked_money",b"total_locked_money",u"total_money_bal",b"total_money_bal",u"val_long",b"val_long",u"val_long_asset",b"val_long_asset",u"val_long_margin",b"val_long_margin",u"val_long_net",b"val_long_net",u"val_short",b"val_short",u"val_short_net",b"val_short_net",u"varmargin",b"varmargin"]) -> None: ...
type___PortfolioInfo = PortfolioInfo

class Args(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    firm_id: typing___Text = ...
    client_code: typing___Text = ...

    def __init__(self,
        *,
        firm_id : typing___Optional[typing___Text] = None,
        client_code : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"client_code",b"client_code",u"firm_id",b"firm_id"]) -> None: ...
type___Args = Args

class Result(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def portfolio_info(self) -> type___PortfolioInfo: ...

    def __init__(self,
        *,
        portfolio_info : typing___Optional[type___PortfolioInfo] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"portfolio_info",b"portfolio_info"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"portfolio_info",b"portfolio_info"]) -> None: ...
type___Result = Result
