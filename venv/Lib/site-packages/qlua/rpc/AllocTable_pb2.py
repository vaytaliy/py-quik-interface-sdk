# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qlua/rpc/AllocTable.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='qlua/rpc/AllocTable.proto',
  package='qlua.rpc.AllocTable',
  syntax='proto3',
  serialized_options=b'\n\010qlua.rpcH\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x19qlua/rpc/AllocTable.proto\x12\x13qlua.rpc.AllocTable\"\x16\n\x06Result\x12\x0c\n\x04t_id\x18\x01 \x01(\x05\x42\x0c\n\x08qlua.rpcH\x01\x62\x06proto3'
)




_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='qlua.rpc.AllocTable.Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='t_id', full_name='qlua.rpc.AllocTable.Result.t_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=72,
)

DESCRIPTOR.message_types_by_name['Result'] = _RESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), {
  'DESCRIPTOR' : _RESULT,
  '__module__' : 'qlua.rpc.AllocTable_pb2'
  # @@protoc_insertion_point(class_scope:qlua.rpc.AllocTable.Result)
  })
_sym_db.RegisterMessage(Result)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
